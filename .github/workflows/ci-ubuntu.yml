name: ci-ubuntu.yml
on:
  push:
    branches:
      - main
jobs:
  build_docker_and_test:
    runs-on: ubuntu-latest
    environment: Prod
    name: Run docker compose yml
    container: docker
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Builds the docker composed image"
        id: build
        run: docker compose build
      - name: "Brings up the docker compose and runs the tests"
        id: run-test
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: docker compose up --abort-on-container-exit --exit-code-from integrationtest
  deploy_service_vps:
    needs: build_docker_and_test
    environment: Prod
    runs-on: ubuntu-latest
    name: Deploy to VPS
    steps:
      - name: "Copy to remote server"
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}
      - name: "Git Pull to update files"
        run: |
          ssh -p ${{ secrets.VPS_IP_PORT }} -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} \
          "cd /ProjectCC/crawler-console && git pull"
  start_docker_containers:
    needs: deploy_service_vps
    environment: Prod
    runs-on: ubuntu-latest
    name: "Start docker containers"
    steps:
      - name: "SSH to remote server:"
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}
      - name: "Run Docker Compose on VPS"
        id: run-docker-compose
        run: |
          ssh -p ${{ secrets.VPS_IP_PORT }} -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} \
          "cd /ProjectCC/logservice && docker compose up -d"

          



